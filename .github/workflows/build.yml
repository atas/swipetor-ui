name: Build

on:
    push:
    workflow_dispatch:

permissions:
    packages: write
    contents: write

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'

            - name: Cache npm dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.npm # This caches the npm cache, not node_modules directly
                  key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-

            - name: Install dependencies
              run: |
                  echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
                  npm ci

            - uses: atas/actions/bump-release-calver@main
              with:
                github_token: ${{ secrets.GITHUB_TOKEN }}

            - name: Build with webpack
              run: |
                  echo "Next version is ${{ env.next_version }}"
                  echo ${{ env.next_version }} > src/config/version.txt
                  echo "Read version is ${{ env.next_version }}"
                  NODE_ENV=production webpack --config webpack.prod.config.js

            - name: Archive production artifacts
              if: github.ref == 'refs/heads/main'
              run: |
                  rm -f ./public/build/*.LICENSE.txt
                  echo ${{ env.next_version }} > public/build/version.txt
                  tar -czvf swpui-v${{ env.next_version }}.tar.gz ./public/build

            - name: Create and Publish Release
              if: github.ref == 'refs/heads/main'
              run: |
                  COMMIT_MSG=$(git log -1 --pretty=%B)
                  # Create a new release and upload the tar.gz as an asset
                  gh release create v${{ env.next_version }} \
                    swpui-v${{ env.next_version }}.tar.gz \
                      --title "Release v${{ env.next_version }}" \
                      --notes "${COMMIT_MSG}"
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    deploy:
      needs: build
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main'
      environment: main
      steps:
        - name: Set up SSH
          run: |
            mkdir -p ~/.ssh/
            ls -lha ~/.ssh
            echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
            chmod 600 ~/.ssh/id_ed25519
            ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

        - name: Trigger pull-deploy
          run: |
            ssh -p${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "/opt/swipetor/bin/pull-deploy/run.sh"

